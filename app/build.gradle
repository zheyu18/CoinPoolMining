apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.bc.bit"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: "com.bc.bit",
                JPUSH_APPKEY : "70bb7da4c5aff1b786d720a1", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default",
        ]
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    signingConfigs {
        release {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file(STORE_FILE)
            storePassword KEYSTORE_PASSWORD
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 签名文件
            signingConfig signingConfigs.release
            // 重命名
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "币池挖矿" + "_" + "${variant.productFlavors[0].name}" + "_" + "${releaseTime()}_release.apk"
                }
            }
        }
    }

    flavorDimensions "default"
    productFlavors {
        //华为
        huawei {
            manifestPlaceholders = [CHANNEL_VALUE: "bcbtbhw"]
            dimension "default"
        }
        // 小米
        xiaomi {
            manifestPlaceholders = [CHANNEL_VALUE: "bcbtbxm"]
            dimension "default"
        }

        //qh360
        qh360 {
            manifestPlaceholders = [CHANNEL_VALUE: "bcbtbqh360"]
            dimension "default"
        }
        // 应用宝
        yingyongbao {
            manifestPlaceholders = [CHANNEL_VALUE: "bcbtbyyb"]
            dimension "default"
        }

        //魅族
        meizu {
            manifestPlaceholders = [CHANNEL_VALUE: "bcbtbmz"]
            dimension "default"
        }

        //oppo
        oppo {
            manifestPlaceholders = [CHANNEL_VALUE: "bcbtboppo"]
            dimension "default"
        }

        //sanxing
        sanxing {
            manifestPlaceholders = [CHANNEL_VALUE: "bcbtbsx"]
            dimension "default"
        }

        // 联想
        lenovo {
            manifestPlaceholders = [CHANNEL_VALUE: "bcbtblx"]
            dimension "default"
        }

        //sougou
        sougou {
            manifestPlaceholders = [CHANNEL_VALUE: "bcbtbsg"]
            dimension "default"
        }

        //baidu
        baidu {
            manifestPlaceholders = [CHANNEL_VALUE: "bcbtbbd"]
            dimension "default"
        }

    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //AppBarLayout在这里面
    implementation 'com.google.android.material:material:1.3.0-alpha01'
    //引用constraintlayout依赖
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //提供通过注解的方式找控件
    //绑定方法
    implementation 'com.jakewharton:butterknife:10.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    implementation files('libs/sun.misc.BASE64Decoder.jar')

    //MultiDex
    implementation 'androidx.multidex:multidex:2.0.0'
    //更方便的日期时间，运算，解析格式化框架
    //https://www.joda.org/joda-time/index.html
    implementation 'joda-time:joda-time:2.10.5'
    implementation 'org.apache.commons:commons-lang3:3.9'

    //跨界面通信框架
    //https://github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'
    //图片加载框架
    //https://github.com/bumptech/glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'
    //recyclerview控件
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha03'

    implementation 'com.lzp:FlycoTabLayoutZ:1.0.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    // 圆形头像
    implementation 'com.makeramen:roundedimageview:2.3.0'
    //封装了RecyclerView
    //提供更高层次的接口
    //https://github.com/CymChad/BaseRecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.2'
    //图片选择
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.5.3'
    implementation 'com.google.guava:guava:29.0-android'
    //请求网络相关
    implementation 'com.squareup.okhttp3:okhttp:4.2.0'
    //retrofit
    //https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    //适配retrofit使用gson解析
    //版本要和retrofit一样
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    //适配retrofit支持rxjava
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //使用gson解析json
    //https://github.com/google/gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // 图片预览
    implementation 'com.github.wanglu1209:PhotoViewer:0.50'
    // web网页框架
    implementation 'com.just.agentweb:agentweb:4.1.3'
    implementation 'com.just.agentweb:filechooser:4.1.3'// (可选)
    implementation 'com.download.library:Downloader:4.1.3'// (可选)

    //文本循环滚动控件
    implementation 'com.sunfusheng:marqueeview:1.3.1'
    // banner轮播
    implementation 'com.ms:Banner:2.3.16'

    // 背景阴影效果
    implementation 'com.github.lihangleo2:ShadowLayout:2.0.1'
    // 日历控件
    implementation 'com.haibin:calendarview:3.6.8'

    // 鸿洋okhttp封装
    implementation 'com.zhy:okhttputils:2.6.2'
    // K线图
    implementation project(path: ':KLineChartLib')

    // 极光推送
    implementation 'cn.jiguang.sdk:jpush:3.6.6'
    implementation 'cn.jiguang.sdk:jcore:2.3.8'
}
